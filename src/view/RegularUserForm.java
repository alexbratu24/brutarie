/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import bussinesLogic.OrderController;
import bussinesLogic.RegularUserController;
import bussinesModel.OrderItem;
import formatters.DateLabelFormatter;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Properties;
import javax.swing.ComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JPanel;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import model.Clients;
import model.Productions;
import model.Products;
import org.jdatepicker.impl.JDatePanelImpl;
import org.jdatepicker.impl.JDatePickerImpl;
import org.jdatepicker.impl.UtilDateModel;
import viewModel.CategoryComboBoxModel;
import viewModel.ClientsComboBoxModel;
import viewModel.OrderItemTable;
import viewModel.OrderTableModel;
import viewModel.ProductsComboBoxModel;

/**
 *
 * @author Alexandru
 */
public class RegularUserForm extends javax.swing.JFrame {

    private RegularUserController _controller;
    private OrderController _orderController;

    /**
     * Creates new form RegularUserForm
     */
    public RegularUserForm() {
        initComponents();
        initTabbedPane();
        
        _controller = new RegularUserController();
        // regUsr_tabbedPane.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        regUsr_tabbedPane = new javax.swing.JTabbedPane();
        welcome_panel = new javax.swing.JPanel();
        regUsr_tabbed_insertOrder_panel = new javax.swing.JPanel();
        insertOrder_clients_comboBox = new javax.swing.JComboBox();
        insertOrder_headerLabel_date = new javax.swing.JLabel();
        insertOrder_headerLabel_client = new javax.swing.JLabel();
        insertOrder_headerLabel_deliveryDate = new javax.swing.JLabel();
        category_Label = new javax.swing.JLabel();
        category_ComboBox = new javax.swing.JComboBox();
        product_ComboBox = new javax.swing.JComboBox();
        product_Label = new javax.swing.JLabel();
        quantity_Label = new javax.swing.JLabel();
        quantity_TextField = new javax.swing.JTextField();
        add_Order_Item_Button = new javax.swing.JButton();
        specialOrder_CheckBox = new javax.swing.JCheckBox();
        special_order_product_date_Label = new javax.swing.JLabel();
        show_insertFields_Button = new javax.swing.JButton();
        order_date_chooser = new com.toedter.calendar.JDateChooser();
        special_order_Date_Chooser = new com.toedter.calendar.JDateChooser();
        delivery_date_Label = new javax.swing.JLabel();
        insert_order_table_ScrollPane = new javax.swing.JScrollPane();
        insert_order_table = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        regUsr = new javax.swing.JPanel();
        regUsr_menuBar = new javax.swing.JMenuBar();
        regUsr_menuBar_file = new javax.swing.JMenu();
        regUsr_menuBar_edit = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout welcome_panelLayout = new javax.swing.GroupLayout(welcome_panel);
        welcome_panel.setLayout(welcome_panelLayout);
        welcome_panelLayout.setHorizontalGroup(
            welcome_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 832, Short.MAX_VALUE)
        );
        welcome_panelLayout.setVerticalGroup(
            welcome_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 533, Short.MAX_VALUE)
        );

        regUsr_tabbedPane.addTab("Bun Venit", welcome_panel);

        insertOrder_clients_comboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        insertOrder_clients_comboBox.setName(""); // NOI18N

        insertOrder_headerLabel_date.setText("Data:");

        insertOrder_headerLabel_client.setText("Client:");

        insertOrder_headerLabel_deliveryDate.setText("Data Livrare (Orientativ):");

        category_Label.setText("Categorie");

        category_ComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        product_ComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        product_Label.setText("Produs");

        quantity_Label.setText("Cantitate");

        quantity_TextField.setText("Cantitate");

        add_Order_Item_Button.setText("Adauga");
        add_Order_Item_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_Order_Item_ButtonActionPerformed(evt);
            }
        });

        specialOrder_CheckBox.setText("Comanda Speciala");
        specialOrder_CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                specialOrder_CheckBoxActionPerformed(evt);
            }
        });

        special_order_product_date_Label.setText("Data Livrare:");

        show_insertFields_Button.setText("Start Comanda");
        show_insertFields_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                show_insertFields_ButtonActionPerformed(evt);
            }
        });

        order_date_chooser.setDateFormatString(" d, MMM yyyy");

        delivery_date_Label.setText("jLabel1");

        insert_order_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        insert_order_table_ScrollPane.setViewportView(insert_order_table);

        javax.swing.GroupLayout regUsr_tabbed_insertOrder_panelLayout = new javax.swing.GroupLayout(regUsr_tabbed_insertOrder_panel);
        regUsr_tabbed_insertOrder_panel.setLayout(regUsr_tabbed_insertOrder_panelLayout);
        regUsr_tabbed_insertOrder_panelLayout.setHorizontalGroup(
            regUsr_tabbed_insertOrder_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(regUsr_tabbed_insertOrder_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(regUsr_tabbed_insertOrder_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(regUsr_tabbed_insertOrder_panelLayout.createSequentialGroup()
                        .addComponent(insertOrder_headerLabel_date, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(insertOrder_headerLabel_client, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(insertOrder_clients_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(insertOrder_headerLabel_deliveryDate, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(order_date_chooser, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(delivery_date_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(regUsr_tabbed_insertOrder_panelLayout.createSequentialGroup()
                        .addGroup(regUsr_tabbed_insertOrder_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(regUsr_tabbed_insertOrder_panelLayout.createSequentialGroup()
                                .addComponent(product_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(product_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(regUsr_tabbed_insertOrder_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(specialOrder_CheckBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(special_order_product_date_Label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, regUsr_tabbed_insertOrder_panelLayout.createSequentialGroup()
                                    .addComponent(quantity_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(quantity_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(special_order_Date_Chooser, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(add_Order_Item_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(regUsr_tabbed_insertOrder_panelLayout.createSequentialGroup()
                                .addComponent(category_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(category_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(insert_order_table_ScrollPane)))
                .addContainerGap(40, Short.MAX_VALUE))
            .addGroup(regUsr_tabbed_insertOrder_panelLayout.createSequentialGroup()
                .addComponent(show_insertFields_Button)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        regUsr_tabbed_insertOrder_panelLayout.setVerticalGroup(
            regUsr_tabbed_insertOrder_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(regUsr_tabbed_insertOrder_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(regUsr_tabbed_insertOrder_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(regUsr_tabbed_insertOrder_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(insertOrder_headerLabel_client)
                        .addComponent(insertOrder_clients_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(insertOrder_headerLabel_deliveryDate, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(insertOrder_headerLabel_date, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(delivery_date_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(order_date_chooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(regUsr_tabbed_insertOrder_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(regUsr_tabbed_insertOrder_panelLayout.createSequentialGroup()
                        .addComponent(show_insertFields_Button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(regUsr_tabbed_insertOrder_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(regUsr_tabbed_insertOrder_panelLayout.createSequentialGroup()
                                .addGroup(regUsr_tabbed_insertOrder_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(category_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(category_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(regUsr_tabbed_insertOrder_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(product_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(product_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(regUsr_tabbed_insertOrder_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(quantity_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(quantity_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(specialOrder_CheckBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(special_order_product_date_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(special_order_Date_Chooser, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(add_Order_Item_Button)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(insert_order_table_ScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );

        regUsr_tabbedPane.addTab("Introducere Comanda", regUsr_tabbed_insertOrder_panel);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 832, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 533, Short.MAX_VALUE)
        );

        regUsr_tabbedPane.addTab("Clienti", jPanel3);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 832, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 533, Short.MAX_VALUE)
        );

        regUsr_tabbedPane.addTab("Rute", jPanel4);

        javax.swing.GroupLayout regUsrLayout = new javax.swing.GroupLayout(regUsr);
        regUsr.setLayout(regUsrLayout);
        regUsrLayout.setHorizontalGroup(
            regUsrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 832, Short.MAX_VALUE)
        );
        regUsrLayout.setVerticalGroup(
            regUsrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 533, Short.MAX_VALUE)
        );

        regUsr_tabbedPane.addTab("Angajati", regUsr);

        regUsr_menuBar_file.setText("File");
        regUsr_menuBar.add(regUsr_menuBar_file);

        regUsr_menuBar_edit.setText("Edit");
        regUsr_menuBar.add(regUsr_menuBar_edit);

        setJMenuBar(regUsr_menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(regUsr_tabbedPane)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(regUsr_tabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 561, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void show_insertFields_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_show_insertFields_ButtonActionPerformed
        Clients client = (Clients) insertOrder_clients_comboBox.getSelectedItem();
        Date orderDate = order_date_chooser.getDate();
        Date today = new Date();
        if (client != null && orderDate != null && orderDate.after(today)) {
            _orderController = new OrderController(client,orderDate);
            startOrder();
 
        } else {
            // mesaj nu introduceti o data trecuta
            // message , completeaza clientul si data
        }
    }//GEN-LAST:event_show_insertFields_ButtonActionPerformed

    private void specialOrder_CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_specialOrder_CheckBoxActionPerformed
        specialOrderDate_changeVisibility();

    }//GEN-LAST:event_specialOrder_CheckBoxActionPerformed

    private void add_Order_Item_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_Order_Item_ButtonActionPerformed
        OrderTableModel tableModel;
        OrderItemTable tableRow;
        
        OrderItem item;
        Products product;
        int quantity;
        product = (Products) product_ComboBox.getSelectedItem();
        quantity=Integer.parseInt(quantity_TextField.getText());        
        item = new OrderItem(product,quantity);
        if ( specialOrder_CheckBox.isSelected())
        {
            Date date = special_order_Date_Chooser.getDate();
            Date now= new Date();
            if (date.after(now))
            {
                _orderController.insertSpecialItem (item,date);
                tableModel=(OrderTableModel) insert_order_table.getModel();
            tableRow = new OrderItemTable (item,date);
            tableModel.addItem(tableRow);
            tableModel.fireTableDataChanged();
            insert_order_table.setModel(tableModel);
            }
            else
            {
                // eroare , baga data buna
            }
        }
        else
        {
            _orderController.insertNormalItem (item);
            
            tableModel=(OrderTableModel) insert_order_table.getModel();
            tableRow = new OrderItemTable (item,_orderController.getGeneralDate());
            tableModel.addItem(tableRow);
            tableModel.fireTableDataChanged();
            insert_order_table.setModel(tableModel);
        }
    }//GEN-LAST:event_add_Order_Item_ButtonActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_Order_Item_Button;
    private javax.swing.JComboBox category_ComboBox;
    private javax.swing.JLabel category_Label;
    private javax.swing.JLabel delivery_date_Label;
    private javax.swing.JComboBox insertOrder_clients_comboBox;
    private javax.swing.JLabel insertOrder_headerLabel_client;
    private javax.swing.JLabel insertOrder_headerLabel_date;
    private javax.swing.JLabel insertOrder_headerLabel_deliveryDate;
    private javax.swing.JTable insert_order_table;
    private javax.swing.JScrollPane insert_order_table_ScrollPane;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private com.toedter.calendar.JDateChooser order_date_chooser;
    private javax.swing.JComboBox product_ComboBox;
    private javax.swing.JLabel product_Label;
    private javax.swing.JLabel quantity_Label;
    private javax.swing.JTextField quantity_TextField;
    private javax.swing.JPanel regUsr;
    private javax.swing.JMenuBar regUsr_menuBar;
    private javax.swing.JMenu regUsr_menuBar_edit;
    private javax.swing.JMenu regUsr_menuBar_file;
    private javax.swing.JTabbedPane regUsr_tabbedPane;
    private javax.swing.JPanel regUsr_tabbed_insertOrder_panel;
    private javax.swing.JButton show_insertFields_Button;
    private javax.swing.JCheckBox specialOrder_CheckBox;
    private com.toedter.calendar.JDateChooser special_order_Date_Chooser;
    private javax.swing.JLabel special_order_product_date_Label;
    private javax.swing.JPanel welcome_panel;
    // End of variables declaration//GEN-END:variables

    private void initTabbedPane() {
        ChangeListener changeListener = new ChangeListener() {
            public void stateChanged(ChangeEvent changeEvent) {
                int index = regUsr_tabbedPane.getSelectedIndex();
                refreshTabbedPane(index);
                System.out.println(index + " Tab changed to: " + regUsr_tabbedPane.getTitleAt(index));
            }
        };
        regUsr_tabbedPane.addChangeListener(changeListener);
        initInsertOrderPanel();
    }

    private void initInsertOrderPanel() {
        OrderTableModel tableModel=new OrderTableModel();
        insertOrderFields_setVisible(false);
        specialDate_setVisible(false);
        delivery_date_Label.setVisible(false);
        category_ComboBox.addActionListener(new ActionListener (){
            @Override
            public void actionPerformed(ActionEvent e) {
                ProductsComboBoxModel productsCbModel;
                List<Products> cbProducts = new ArrayList<Products>();
                cbProducts = _controller.getComboBoxProducts((Productions) category_ComboBox.getSelectedItem());
                productsCbModel = new ProductsComboBoxModel(cbProducts, cbProducts.get(0));        
                product_ComboBox.setModel(productsCbModel);
            }
        });
      //  tableModel.addItem(new OrderItemTable(new OrderItem (new Products (1,0.2,"Bratu"),22),new Date()));
      //  tableModel.addItem(new OrderItemTable(new OrderItem (new Products (12,0.28765,"Bratu2"),32),new Date()));
        insert_order_table.setModel(tableModel);
        /*
         insertOrder_clients_comboBox.addActionListener (new ActionListener () {           
         @Override
         public void actionPerformed(ActionEvent e) {
         //OrderController orderController = new OrderController();
         if ( insertOrder_clients_comboBox.getSelectedItem() != null )
         {
                    
         }
         }

            
         }); 
         */
    }

    private void refreshTabbedPane(int index) {
        switch (index) {
            case 1:
                // insert order panel
                refreshInsertOrderPanel();
                break;
            case 2:

                break;
            case 3:
                break;
            case 4:
                break;
            case 5:
                break;
            case 6:
                break;
            default:
                regUsr_tabbedPane.setSelectedIndex(0);
        }
    }

    private void refreshInsertOrderPanel() {
        List<Clients> cbClients = new ArrayList<Clients>();
        ClientsComboBoxModel cbModel;
        _controller.refreshInsertOrderPanel();
        cbClients = _controller.getComboBoxClients();
        cbModel = new ClientsComboBoxModel(cbClients, cbClients.get(0));
        insertOrder_clients_comboBox.setModel(cbModel);

        //insertOrder_headerLabel.setText("Data : "+Calendar.DAY_OF_MONTH+" / "+Calendar.MONTH+" / "+Calendar.getInstance().);
        SimpleDateFormat sdfDate = new SimpleDateFormat("dd/MM/yyyy");
        Date now = new Date();
        String labelText = sdfDate.format(now);
        insertOrder_headerLabel_date.setText("Data: " + labelText);
        
    }

    public void insertOrderFields_setVisible(Boolean x) {
        category_Label.setVisible(x);
        category_ComboBox.setVisible(x);
        product_Label.setVisible(x);
        product_ComboBox.setVisible(x);
        quantity_Label.setVisible(x);
        quantity_TextField.setVisible(x);
        specialOrder_CheckBox.setVisible(x);
        add_Order_Item_Button.setVisible(x);
        insert_order_table_ScrollPane.setVisible(x);
        insert_order_table.setVisible(x);

    }

    public void specialDate_setVisible(Boolean x) {
        special_order_product_date_Label.setVisible(x);
        special_order_Date_Chooser.setVisible(x);
    }

    private void specialOrderDate_changeVisibility() {
        special_order_product_date_Label.setVisible(!special_order_product_date_Label.isVisible());
        special_order_Date_Chooser.setVisible(!special_order_Date_Chooser.isVisible());
    }

    private void startOrder() {
        CategoryComboBoxModel categoryCbModel;
        List<Productions> cbCategories = new ArrayList<Productions>();
        ProductsComboBoxModel productsCbModel;
        List<Products> cbProducts = new ArrayList<Products>();

        cbCategories = _controller.getComboBoxCategories();
        categoryCbModel = new CategoryComboBoxModel(cbCategories, cbCategories.get(0));

        cbProducts = _controller.getComboBoxProducts(cbCategories.get(0));
        productsCbModel = new ProductsComboBoxModel(cbProducts, cbProducts.get(0));

        insertOrderFields_setVisible(true);
        show_insertFields_Button.setVisible(false);
        setHeaderEditability(false);

        category_ComboBox.setModel(categoryCbModel);
        product_ComboBox.setModel(productsCbModel);
    }

    private void setHeaderEditability(boolean b) {
        if (!b) {
            insertOrder_clients_comboBox.setEnabled(b);
            order_date_chooser.setVisible(b);
            SimpleDateFormat sdfDate = new SimpleDateFormat("dd/MM/yyyy");
            Date now = order_date_chooser.getDate();
            String labelText = sdfDate.format(now);
            
            delivery_date_Label.setText(labelText);
            delivery_date_Label.setVisible(true);
            

        } else {

        }
    }

}
